{"ast":null,"code":"import{createSlice}from'@reduxjs/toolkit';export var initialState={pendingSync:false,lastSynced:'',error:'',syncing:false};var syncSlice=createSlice({name:'sync',initialState:initialState,reducers:{setPendingSync:function setPendingSync(state){state.pendingSync=true;},// eslint-disable-next-line\nsync:function sync(state,_ref){var payload=_ref.payload;state.syncing=true;},syncError:function syncError(state,_ref2){var payload=_ref2.payload;state.syncing=false;state.error=payload;},syncSuccess:function syncSuccess(state,_ref3){var payload=_ref3.payload;state.syncing=false;state.lastSynced=payload;state.pendingSync=false;}}});var _syncSlice$actions=syncSlice.actions,sync=_syncSlice$actions.sync,syncError=_syncSlice$actions.syncError,syncSuccess=_syncSlice$actions.syncSuccess,setPendingSync=_syncSlice$actions.setPendingSync;export{sync,syncError,syncSuccess,setPendingSync};export default syncSlice.reducer;","map":{"version":3,"sources":["/Users/macbookpro/Desktop/Portfolios/abdelouadoud8.github.io/src/store/slices/sync.ts"],"names":["createSlice","initialState","pendingSync","lastSynced","error","syncing","syncSlice","name","reducers","setPendingSync","state","sync","payload","syncError","syncSuccess","actions","reducer"],"mappings":"AAAA,OAASA,WAAT,KAA2C,kBAA3C,CAIA,MAAO,IAAMC,CAAAA,YAAuB,CAAG,CACtCC,WAAW,CAAE,KADyB,CAEtCC,UAAU,CAAE,EAF0B,CAGtCC,KAAK,CAAE,EAH+B,CAItCC,OAAO,CAAE,KAJ6B,CAAhC,CAOP,GAAMC,CAAAA,SAAS,CAAGN,WAAW,CAAC,CAC7BO,IAAI,CAAE,MADuB,CAE7BN,YAAY,CAAZA,YAF6B,CAG7BO,QAAQ,CAAE,CACTC,cAAc,CAAE,wBAACC,KAAD,CAAW,CAC1BA,KAAK,CAACR,WAAN,CAAoB,IAApB,CACA,CAHQ,CAKT;AACAS,IAAI,CAAE,cAACD,KAAD,MAAoD,IAA1CE,CAAAA,OAA0C,MAA1CA,OAA0C,CACzDF,KAAK,CAACL,OAAN,CAAgB,IAAhB,CACA,CARQ,CAUTQ,SAAS,CAAE,mBAACH,KAAD,OAA+C,IAArCE,CAAAA,OAAqC,OAArCA,OAAqC,CACzDF,KAAK,CAACL,OAAN,CAAgB,KAAhB,CACAK,KAAK,CAACN,KAAN,CAAcQ,OAAd,CACA,CAbQ,CAeTE,WAAW,CAAE,qBAACJ,KAAD,OAA+C,IAArCE,CAAAA,OAAqC,OAArCA,OAAqC,CAC3DF,KAAK,CAACL,OAAN,CAAgB,KAAhB,CACAK,KAAK,CAACP,UAAN,CAAmBS,OAAnB,CACAF,KAAK,CAACR,WAAN,CAAoB,KAApB,CACA,CAnBQ,CAHmB,CAAD,CAA7B,CA0BO,uBAAyDI,SAAS,CAACS,OAAnE,CAAQJ,IAAR,oBAAQA,IAAR,CAAcE,SAAd,oBAAcA,SAAd,CAAyBC,WAAzB,oBAAyBA,WAAzB,CAAsCL,cAAtC,oBAAsCA,cAAtC,C,kDAEP,cAAeH,CAAAA,SAAS,CAACU,OAAzB","sourcesContent":["import { createSlice, PayloadAction } from '@reduxjs/toolkit'\n\nimport { SyncState, SyncPayload } from '../../helpers/types'\n\nexport const initialState: SyncState = {\n pendingSync: false,\n lastSynced: '',\n error: '',\n syncing: false,\n}\n\nconst syncSlice = createSlice({\n name: 'sync',\n initialState,\n reducers: {\n  setPendingSync: (state) => {\n   state.pendingSync = true\n  },\n\n  // eslint-disable-next-line\n  sync: (state, { payload }: PayloadAction<SyncPayload>) => {\n   state.syncing = true\n  },\n\n  syncError: (state, { payload }: PayloadAction<string>) => {\n   state.syncing = false\n   state.error = payload\n  },\n\n  syncSuccess: (state, { payload }: PayloadAction<string>) => {\n   state.syncing = false\n   state.lastSynced = payload\n   state.pendingSync = false\n  },\n },\n})\n\nexport const { sync, syncError, syncSuccess, setPendingSync } = syncSlice.actions\n\nexport default syncSlice.reducer\n"]},"metadata":{},"sourceType":"module"}