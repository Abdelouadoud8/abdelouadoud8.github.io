{"ast":null,"code":"var _s = $RefreshSig$();\n\n// This file is for conf store\nimport { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport createSagaMiddleware from 'redux-saga';\nimport { useDispatch } from 'react-redux';\nimport rootReducer from './slices/index';\nconst sagaMiddleware = createSagaMiddleware();\nconst store = configureStore({\n  reducer: rootReducer,\n  middleware: [sagaMiddleware, ...getDefaultMiddleware({\n    thunk: false\n  })],\n  devTools: process.env.NODE_ENV !== 'production'\n});\nexport const useAppDispatch = () => {\n  _s();\n\n  return useDispatch();\n};\n\n_s(useAppDispatch, \"jI3HA1r1Cumjdbu14H7G+TUj798=\", false, function () {\n  return [useDispatch];\n});\n\nexport default store;","map":{"version":3,"sources":["/Users/macbookpro/Desktop/Portfolios/abdelouadoud8.github.io/src/store/index.ts"],"names":["configureStore","getDefaultMiddleware","createSagaMiddleware","useDispatch","rootReducer","sagaMiddleware","store","reducer","middleware","thunk","devTools","process","env","NODE_ENV","useAppDispatch"],"mappings":";;AAAA;AAEA,SAASA,cAAT,EAAyBC,oBAAzB,QAAqD,kBAArD;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AACA,SAASC,WAAT,QAA4B,aAA5B;AAEA,OAAOC,WAAP,MAAwB,gBAAxB;AAEA,MAAMC,cAAc,GAAGH,oBAAoB,EAA3C;AAEA,MAAMI,KAAK,GAAGN,cAAc,CAAC;AAC5BO,EAAAA,OAAO,EAAEH,WADmB;AAE5BI,EAAAA,UAAU,EAAE,CAACH,cAAD,EAAiB,GAAGJ,oBAAoB,CAAC;AAAEQ,IAAAA,KAAK,EAAE;AAAT,GAAD,CAAxC,CAFgB;AAG5BC,EAAAA,QAAQ,EAAEC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB;AAHP,CAAD,CAA5B;AAOA,OAAO,MAAMC,cAAc,GAAG,MAAmB;AAAA;;AAChD,SAAOX,WAAW,EAAlB;AACA,CAFM;;GAAMW,c;UACLX,W;;;AAER,eAAeG,KAAf","sourcesContent":["// This file is for conf store\n\nimport { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit'\nimport createSagaMiddleware from 'redux-saga'\nimport { useDispatch } from 'react-redux'\n\nimport rootReducer from './slices/index'\n\nconst sagaMiddleware = createSagaMiddleware()\n\nconst store = configureStore({\n reducer: rootReducer,\n middleware: [sagaMiddleware, ...getDefaultMiddleware({ thunk: false })],\n devTools: process.env.NODE_ENV !== 'production',\n})\n\nexport type AppDispatch = typeof store.dispatch\nexport const useAppDispatch = (): AppDispatch => {\n return useDispatch<AppDispatch>()\n}\nexport default store\n"]},"metadata":{},"sourceType":"module"}