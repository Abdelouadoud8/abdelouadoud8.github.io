{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nexport const initialState = {\n  pendingSync: false,\n  lastSynced: '',\n  error: '',\n  syncing: false\n};\nconst syncSlice = createSlice({\n  name: 'sync',\n  initialState,\n  reducers: {\n    setPendingSync: state => {\n      state.pendingSync = true;\n    },\n    // eslint-disable-next-line\n    sync: (state, {\n      payload\n    }) => {\n      state.syncing = true;\n    },\n    syncError: (state, {\n      payload\n    }) => {\n      state.syncing = false;\n      state.error = payload;\n    },\n    syncSuccess: (state, {\n      payload\n    }) => {\n      state.syncing = false;\n      state.lastSynced = payload;\n      state.pendingSync = false;\n    }\n  }\n});\nexport const {\n  sync,\n  syncError,\n  syncSuccess,\n  setPendingSync\n} = syncSlice.actions;\nexport default syncSlice.reducer;","map":{"version":3,"sources":["/Users/macbookpro/Desktop/Portfolios/new-portfolio/src/store/slices/sync.ts"],"names":["createSlice","initialState","pendingSync","lastSynced","error","syncing","syncSlice","name","reducers","setPendingSync","state","sync","payload","syncError","syncSuccess","actions","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA2C,kBAA3C;AAIA,OAAO,MAAMC,YAAuB,GAAG;AACtCC,EAAAA,WAAW,EAAE,KADyB;AAEtCC,EAAAA,UAAU,EAAE,EAF0B;AAGtCC,EAAAA,KAAK,EAAE,EAH+B;AAItCC,EAAAA,OAAO,EAAE;AAJ6B,CAAhC;AAOP,MAAMC,SAAS,GAAGN,WAAW,CAAC;AAC7BO,EAAAA,IAAI,EAAE,MADuB;AAE7BN,EAAAA,YAF6B;AAG7BO,EAAAA,QAAQ,EAAE;AACTC,IAAAA,cAAc,EAAGC,KAAD,IAAW;AAC1BA,MAAAA,KAAK,CAACR,WAAN,GAAoB,IAApB;AACA,KAHQ;AAKT;AACAS,IAAAA,IAAI,EAAE,CAACD,KAAD,EAAQ;AAAEE,MAAAA;AAAF,KAAR,KAAoD;AACzDF,MAAAA,KAAK,CAACL,OAAN,GAAgB,IAAhB;AACA,KARQ;AAUTQ,IAAAA,SAAS,EAAE,CAACH,KAAD,EAAQ;AAAEE,MAAAA;AAAF,KAAR,KAA+C;AACzDF,MAAAA,KAAK,CAACL,OAAN,GAAgB,KAAhB;AACAK,MAAAA,KAAK,CAACN,KAAN,GAAcQ,OAAd;AACA,KAbQ;AAeTE,IAAAA,WAAW,EAAE,CAACJ,KAAD,EAAQ;AAAEE,MAAAA;AAAF,KAAR,KAA+C;AAC3DF,MAAAA,KAAK,CAACL,OAAN,GAAgB,KAAhB;AACAK,MAAAA,KAAK,CAACP,UAAN,GAAmBS,OAAnB;AACAF,MAAAA,KAAK,CAACR,WAAN,GAAoB,KAApB;AACA;AAnBQ;AAHmB,CAAD,CAA7B;AA0BA,OAAO,MAAM;AAAES,EAAAA,IAAF;AAAQE,EAAAA,SAAR;AAAmBC,EAAAA,WAAnB;AAAgCL,EAAAA;AAAhC,IAAmDH,SAAS,CAACS,OAAnE;AAEP,eAAeT,SAAS,CAACU,OAAzB","sourcesContent":["import { createSlice, PayloadAction } from '@reduxjs/toolkit'\n\nimport { SyncState, SyncPayload } from '../../helpers/types'\n\nexport const initialState: SyncState = {\n pendingSync: false,\n lastSynced: '',\n error: '',\n syncing: false,\n}\n\nconst syncSlice = createSlice({\n name: 'sync',\n initialState,\n reducers: {\n  setPendingSync: (state) => {\n   state.pendingSync = true\n  },\n\n  // eslint-disable-next-line\n  sync: (state, { payload }: PayloadAction<SyncPayload>) => {\n   state.syncing = true\n  },\n\n  syncError: (state, { payload }: PayloadAction<string>) => {\n   state.syncing = false\n   state.error = payload\n  },\n\n  syncSuccess: (state, { payload }: PayloadAction<string>) => {\n   state.syncing = false\n   state.lastSynced = payload\n   state.pendingSync = false\n  },\n },\n})\n\nexport const { sync, syncError, syncSuccess, setPendingSync } = syncSlice.actions\n\nexport default syncSlice.reducer\n"]},"metadata":{},"sourceType":"module"}